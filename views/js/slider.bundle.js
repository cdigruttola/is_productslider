!function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="public",o(o.s=8)}({0:function(t,e,o){"use strict";o.d(e,"a",(function(){return i}));
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */
const{$:n}=window;class i{constructor(){n(document).on("click",".js-form-submit-btn",(function(t){t.preventDefault();const e=n(this);if(e.data("form-confirm-message")&&!1===window.confirm(e.data("form-confirm-message")))return;let o="POST",i=null;if(e.data("method")){const t=e.data("method"),a=["GET","POST"].includes(t);o=a?t:"POST",a||(i=n("<input>",{type:"_hidden",name:"_method",value:t}))}const a=n("<form>",{action:e.data("form-submit-url"),method:o});i&&a.append(i),e.data("form-csrf-token")&&a.append(n("<input>",{type:"_hidden",name:"_csrf_token",value:e.data("form-csrf-token")})),a.appendTo("body").submit()}))}}},8:function(t,e,o){"use strict";o.r(e);
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */
const{$:n}=window;class i{constructor(t){this.id=t,this.$container=n(`#${this.id}_grid`)}getId(){return this.id}getContainer(){return this.$container}getHeaderContainer(){return this.$container.closest(".js-grid-panel").find(".js-grid-header")}addExtension(t){t.extend(this)}}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */const{$:a}=window;class s{extend(t){this.initRowLinks(t),this.initConfirmableActions(t)}initConfirmableActions(t){t.getContainer().on("click",".js-link-row-action",t=>{const e=a(t.currentTarget).data("confirm-message");e.length&&!window.confirm(e)&&t.preventDefault()})}initRowLinks(t){a("tr",t.getContainer()).each((function(){const t=a(this);a(".js-link-row-action[data-clickable-row=1]:first",t).each((function(){const e=a(this),o=e.closest("td"),n=a("td.clickable",t).not(o);let i=!1;n.addClass("cursor-pointer").mousedown(()=>{a(window).mousemove(()=>{i=!0,a(window).unbind("mousemove")})}),n.mouseup(()=>{const t=i;if(i=!1,a(window).unbind("mousemove"),!t){const t=e.data("confirm-message");t.length&&!window.confirm(t)||(document.location=e.attr("href"))}})}))}))}}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */const{$:r}=window;function c(t,e,o){const{id:n,closable:i}=t;this.modal=function({id:t="confirm-modal",confirmTitle:e,confirmMessage:o="",closeButtonLabel:n="Close",confirmButtonLabel:i="Accept",confirmButtonClass:a="btn-primary",customButtons:s=[]}){const r={};r.container=document.createElement("div"),r.container.classList.add("modal","fade"),r.container.id=t,r.dialog=document.createElement("div"),r.dialog.classList.add("modal-dialog"),r.content=document.createElement("div"),r.content.classList.add("modal-content"),r.header=document.createElement("div"),r.header.classList.add("modal-header"),e&&(r.title=document.createElement("h4"),r.title.classList.add("modal-title"),r.title.innerHTML=e);r.closeIcon=document.createElement("button"),r.closeIcon.classList.add("close"),r.closeIcon.setAttribute("type","button"),r.closeIcon.dataset.dismiss="modal",r.closeIcon.innerHTML="Ã—",r.body=document.createElement("div"),r.body.classList.add("modal-body","text-left","font-weight-normal"),r.message=document.createElement("p"),r.message.classList.add("confirm-message"),r.message.innerHTML=o,r.footer=document.createElement("div"),r.footer.classList.add("modal-footer"),r.closeButton=document.createElement("button"),r.closeButton.setAttribute("type","button"),r.closeButton.classList.add("btn","btn-outline-secondary","btn-lg"),r.closeButton.dataset.dismiss="modal",r.closeButton.innerHTML=n,r.confirmButton=document.createElement("button"),r.confirmButton.setAttribute("type","button"),r.confirmButton.classList.add("btn",a,"btn-lg","btn-confirm-submit"),r.confirmButton.dataset.dismiss="modal",r.confirmButton.innerHTML=i,e?r.header.append(r.title,r.closeIcon):r.header.appendChild(r.closeIcon);return r.body.appendChild(r.message),r.footer.append(r.closeButton,...s,r.confirmButton),r.content.append(r.header,r.body,r.footer),r.dialog.appendChild(r.content),r.container.appendChild(r.dialog),r}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */(t),this.$modal=r(this.modal.container),this.show=()=>{this.$modal.modal()},this.modal.confirmButton.addEventListener("click",e),this.$modal.modal({backdrop:!!i||"static",keyboard:void 0===i||i,closable:void 0===i||i,show:!1}),this.$modal.on("hidden.bs.modal",()=>{document.querySelector("#"+n).remove(),o&&o()}),document.body.appendChild(this.modal.container)}const{$:d}=window;class l{extend(t){t.getContainer().on("click",".js-submit-row-action",e=>{e.preventDefault();const o=d(e.currentTarget),n=o.data("confirmMessage"),i=o.data("title"),a=o.data("method");if(i)this.showConfirmModal(o,t,n,i,a);else{if(n.length&&!window.confirm(n))return;this.postForm(o,a)}})}postForm(t,e){const o=["GET","POST"].includes(e),n=d("<form>",{action:t.data("url"),method:o?e:"POST"}).appendTo("body");o||n.append(d("<input>",{type:"_hidden",name:"_method",value:e})),n.submit()}showConfirmModal(t,e,o,n,i){const a=t.data("confirmButtonLabel"),s=t.data("closeButtonLabel"),r=t.data("confirmButtonClass");new c({id:e.getId()+"-grid-confirm-modal",confirmTitle:n,confirmMessage:o,confirmButtonLabel:a,closeButtonLabel:s,confirmButtonClass:r},()=>this.postForm(t,i)).show()}}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */const{$:m}=window;var u=class{constructor(t){this.selector=".ps-sortable-column",this.columns=m(t).find(this.selector)}attach(){this.columns.on("click",t=>{const e=m(t.delegateTarget);this.sortByColumn(e,this.getToggledSortDirection(e))})}sortBy(t,e){const o=this.columns.is(`[data-sort-col-name="${t}"]`);if(!o)throw new Error(`Cannot sort by "${t}": invalid column`);this.sortByColumn(o,e)}sortByColumn(t,e){window.location=this.getUrl(t.data("sortColName"),"desc"===e?"desc":"asc",t.data("sortPrefix"))}getToggledSortDirection(t){return"asc"===t.data("sortDirection")?"desc":"asc"}getUrl(t,e,o){const n=new URL(window.location.href),i=n.searchParams;return o?(i.set(o+"[orderBy]",t),i.set(o+"[sortOrder]",e)):(i.set("orderBy",t),i.set("sortOrder",e)),n.toString()}};
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */class f{extend(t){const e=t.getContainer().find("table.table");new u(e).attach()}}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */const{$:h}=window;var g=function(t,e){h.post(t).then(()=>window.location.assign(e))};
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */const{$:b}=window;class w{extend(t){t.getContainer().on("click",".js-reset-search",t=>{g(b(t.currentTarget).data("url"),b(t.currentTarget).data("redirect"))})}}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */class p{extend(t){t.getHeaderContainer().on("click",".js-common_refresh_list-grid-action",()=>{window.location.reload()})}}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */const{$:y}=window;class _{extend(t){t.getContainer().find("table.table").find(".ps-togglable-row").on("click",t=>{t.preventDefault(),this.toggleValue(y(t.delegateTarget))})}toggleValue(t){const e=t.data("toggleUrl");this.submitAsForm(e)}submitAsForm(t){y("<form>",{action:t,method:"POST"}).appendTo("body").submit()}}
/**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 */const{$:C}=window;class v{extend(t){t.getHeaderContainer().on("click",".js-common_show_query-grid-action",()=>this.onShowSqlQueryClick(t)),t.getHeaderContainer().on("click",".js-common_export_sql_manager-grid-action",()=>this.onExportSqlManagerClick(t))}onShowSqlQueryClick(t){const e=C(`#${t.getId()}_common_show_query_modal_form`);this.fillExportForm(e,t);const o=C(`#${t.getId()}_grid_common_show_query_modal`);o.modal("show"),o.on("click",".btn-sql-submit",()=>e.submit())}onExportSqlManagerClick(t){const e=C(`#${t.getId()}_common_show_query_modal_form`);this.fillExportForm(e,t),e.submit()}fillExportForm(t,e){const o=e.getContainer().find(".js-grid-table").data("query");t.find('textarea[name="sql"]').val(o),t.find('input[name="name"]').val(this.getNameFromBreadcrumb())}getNameFromBreadcrumb(){const t=C(".header-toolbar").find(".breadcrumb-item");let e="";return t.each((t,o)=>{const n=C(o),i=n.find("a").length>0?n.find("a").text():n.text();e.length>0&&(e=e.concat(" > ")),e=e.concat(i)}),e}}var x=o(0);
/**
 * Copyright since 2007 Carmine Di Gruttola
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to http://www.prestashop.com for more information.
 *
 *  @author    cdigruttola <c.digruttola@hotmail.it>
 *  @copyright Copyright since 2007 Carmine Di Gruttola
 *  @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 *
 */const{$:B}=window;B(()=>{const t=new i("sliderproducts");t.addExtension(new f),t.addExtension(new s),t.addExtension(new l),t.addExtension(new w),t.addExtension(new p),t.addExtension(new _),t.addExtension(new v),new x.a})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,